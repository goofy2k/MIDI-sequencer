0x400ecb6c: NimBLEDevice::init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/esp-nimble-cpp/src/NimBLEDevice.cpp:813   >>>

errRc = nvs_flash_init();

0x400dfae7: MidiOutNimBLE::initialize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/NiCMidi/src/nimBLEdriver.cpp:246   >>>

 NimBLEDevice::init("fckx_seq"); 

0x400dfc35: MidiOutNimBLE::MidiOutNimBLE() at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/NiCMidi/src/nimBLEdriver.cpp:219 >>>

 MidiOutNimBLE :: MidiOutNimBLE ()
//MidiOutNimBLE :: MidiOutNimBLE (const std::string &clientName)
{   
    MidiOutNimBLE::initialize("fckx_seq2"); 
    //MidiOutNimBLE::initialize(clientName);    
}

0x400dc5f7: MIDIManager::Init() at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/NiCMidi/src/manager.cpp:297 >>>

      std::cout << "Going to create temp MidiOutNimBLE for detecting nr of ports" << std::endl;
      MidiOutNimBLE temp_MIDI_out;


0x400dc9e6: MIDIManager::IsValidOutPortNumber(unsigned int) at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/NiCMidi/src/manager.cpp:125


    if (!init)
        Init();
    return MIDI_outs->size() > n;


0x400e409f: MIDISequencer::MIDISequencer(MIDIMultiTrack*, MIDISequencerGUINotifier*) at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/NiCMidi/src/sequencer.cpp:386 >>>

    if (!MIDIManager::IsValidOutPortNumber(0)) throw RtMidiError("MIDISequencer needs almost a MIDI out port in the system\n", RtMidiError::INVALID_DEVICE);

0x400d928d: AdvancedSequencer::AdvancedSequencer(MIDISequencerGUINotifier*) at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../components/NiCMidi/src/advancedsequencer.cpp:114  >>>

AdvancedSequencer::AdvancedSequencer(MIDISequencerGUINotifier *n) :
    MIDISequencer (new MIDIMultiTrack(17) , n),
    num_measures(0),
    file_loaded (false),
    owns_tracks (true)  

0x400d84db: __static_initialization_and_destruction_0(int, int) at c:\users\fred\esp_projects\midi-sequencer\fckx_sequencer_v36_new_rtmidi_nimbleout\build/../main/main.cpp:537 (discriminator 10)     >>> AdvancedSequencer sequencer(&text_n)