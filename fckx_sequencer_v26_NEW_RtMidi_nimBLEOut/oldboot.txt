rst:0x1 (POWERON_RESET),boot:0x17 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:4
load:0x3fff0034,len:7068
load:0x40078000,len:13652
load:0x40080400,len:4632
0x40080400: _init at ??:?

entry 0x400806f4
I (29) boot: ESP-IDF v4.2-dirty 2nd stage bootloader
I (29) boot: compile time 13:38:21
I (29) boot: chip revision: 3
I (32) boot_comm: chip revision: 3, min. bootloader chip revision: 1
I (40) boot.esp32: SPI Speed      : 40MHz
I (44) boot.esp32: SPI Mode       : DIO
I (49) boot.esp32: SPI Flash Size : 8MB
I (53) boot: Enabling RNG early entropy source...
I (59) boot: Partition Table:
I (62) boot: ## Label            Usage          Type ST Offset   Length
I (70) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (77) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (84) boot:  2 factory          factory app      00 00 00010000 00200000
I (92) boot: End of partition table
I (96) boot_comm: chip revision: 3, min. application chip revision: 1
I (103) esp_image: segment 0: paddr=0x00010020 vaddr=0x3f400020 size=0x3025c (197212) map
I (195) esp_image: segment 1: paddr=0x00040284 vaddr=0x3ffbdb60 size=0x0430c ( 17164) load
I (203) esp_image: segment 2: paddr=0x00044598 vaddr=0x40080000 size=0x00404 (  1028) load
0x40080000: _WindowOverflow4 at C:/Users/Fred/esp-idf/components/freertos/xtensa/xtensa_vectors.S:1730

I (204) esp_image: segment 3: paddr=0x000449a4 vaddr=0x40080404 size=0x0b674 ( 46708) load
I (233) esp_image: segment 4: paddr=0x00050020 vaddr=0x400d0020 size=0xd7c60 (883808) map
0x400d0020: _stext at ??:?

I (602) esp_image: segment 5: paddr=0x00127c88 vaddr=0x4008ba78 size=0x0f034 ( 61492) load
0x4008ba78: r_ld_fm_rx_isr at ??:?

I (646) boot: Loaded app from partition at offset 0x10000
I (646) boot: Disabling RNG early entropy source...
I (647) psram: This chip is ESP32-D0WD
I (652) spiram: Found 64MBit SPI RAM device
I (656) spiram: SPI RAM mode: flash 40m sram 40m
I (661) spiram: PSRAM initialized, cache is in low/high (2-core) mode.
I (668) cpu_start: Pro cpu up.
I (672) cpu_start: Application information:
I (677) cpu_start: Project name:     fckx_sequencer
I (683) cpu_start: App version:      26c1243
I (688) cpu_start: Compile time:     Dec 23 2021 19:14:52
I (694) cpu_start: ELF file SHA256:  5becccb7f036ded7...
I (700) cpu_start: ESP-IDF:          v4.2-dirty
I (705) cpu_start: Starting app cpu, entry point is 0x40081ba8
0x40081ba8: call_start_cpu1 at C:/Users/Fred/esp-idf/components/esp32/cpu_start.c:287

I (0) cpu_start: App cpu up.
I (1599) spiram: SPI SRAM memory test OK
I (1600) heap_init: Initializing. RAM available for dynamic allocation:
I (1600) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM
I (1606) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM
I (1612) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM
I (1618) heap_init: At 3FFC9E28 len 000161D8 (88 KiB): DRAM
I (1625) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (1631) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
I (1637) heap_init: At 4009AAAC len 00005554 (21 KiB): IRAM
I (1644) cpu_start: Pro cpu start user code
I (1649) spiram: Adding pool of 4096K of external SPI memory to heap allocator
Executing MIDIManager::Init()
Going to create temp MidiOutNimBLE for detecting nr of ports
W (1684) NIMBLEDRIVER: MidiOutNimBLE :: initialize  STILL EMPTY
Created temp MidiOutNimBLE for detecting nr of ports
E (1691) NICMIDI DRIVER: start creation of MidiOutNimBLE port
W (1692) NIMBLEDRIVER: MidiOutNimBLE :: initialize  STILL EMPTY
E (1702) NICMIDI DRIVER: executed creation of MidiOutNimBLE port
Going to create temp MQTTMidiIn for detecting nr of ports
W (1716) MQTTDRIVER: MQTTMidiIn instantiation
W (1716) MQTTDRIVER: MQTTMidiIn :: initialize
Created temp MQTTMidiIn for detecting nr of ports
E (1730) NICMIDI DRIVER: start creation of MQTTMidiIn port
W (1730) MQTTDRIVER: MQTTMidiIn instantiation
W (1730) MQTTDRIVER: MQTTMidiIn :: initialize
E (1741) MQTTDRIVER: MQTTMidiIn::setCallback: STORING CALLBACK IN inputData_
E (1752) NICMIDI DRIVER: executed creation of MQTTMidiIn port
Exiting MIDIManager::Init() Found 1 midi out and 1 midi in
E (1766) SEQUENCER: track_states.size() 17
E (1772) SEQUENCER: track_states.size() 17
E (1772) SEQUENCER: track_states.size() 17
E (1781) SEQUENCER: track_states.size() 17
E (1785) SEQUENCER: track_states.W (1801) spi_flash: Detected size(16384k) larger than the size in the binary image header(8192k). Using the size in the binary image header.
size() 17
I (1800) spi_flash: detected chip: gd
I (1801) spi_flash: flash io: dio
I (1803) cpu_I (0) cpu_start: Starting scheduler on APP CPU.
I (1819) spiram: Reserving pool of 32K of internal memory for DMA/internal allocations
start: Starting scheduler on PRO CPU.
I (1829) APP_MAIN: [APP] Startup..
I (1829) APP_MAIN: [APP] Free memory: 4293948 bytes
I (1839) APP_MAIN: [APP] IDF version: v4.2-dirty
W (1839) APP_MAIN: Initialize WIFI connection here
I (1899) APP_MAIN: ESP_WIFI_MODE_STA
I (1909) wifi:wifi driver task: 3ffe6b84, prio:23, stack:3072, core=0
I (1909) system_api: Base MAC address is not set
I (1909) system_api: read default base MAC address from EFUSE
I (1939) wifi:wifi firmware version: 1865b55
I (1939) wifi:wifi certification version: v7.0
I (1939) wifi:config NVS flash: enabled
I (1939) wifi:config nano formating: enabled
I (1939) wifi:Init data frame dynamic rx buffer num: 32
I (1939) wifi:Init management frame dynamic rx buffer num: 32
I (1949) wifi:Init management short buffer num: 32
I (1949) wifi:Init static tx buffer num: 16
I (1959) wifi:Init tx cache buffer num: 32
I (1959) wifi:Init static rx buffer size: 1600
I (1959) wifi:Init static rx buffer num: 10
I (1969) wifi:Init dynamic rx buffer num: 32
I (1969) wifi_init: rx ba win: 6
I (1969) wifi_init: tcpip mbox: 32
I (1979) wifi_init: udp mbox: 6
I (1979) wifi_init: tcp mbox: 6
I (1979) wifi_init: tcp tx win: 5744
I (1989) wifi_init: tcp rx win: 5744
I (1989) wifi_init: tcp mss: 1440I (2099) phy: phy_version: 4500, 0cd6843, Sep 17 2020, 15:37:07, 0, 0
m
I (2009) wifi_init: WiFi/LWIP prefer SPIRAM
I (2109) wifi:mode : sta (84:cc:a8:0d:3b:70)
I (2109) FCKX_SEQ: wifi_init_sta finished.
I (2229) wifi:new:<8,0>, old:<1,0>, ap:<255,255>, sta:<8,0>, prof:1
I (2229) wifi:state: init -> auth (b0)
I (2249) wifi:state: auth -> assoc (0)
I (2299) wifi:state: assoc -> run (10)
I (2409) wifi:connected with Verhoeckx_glas, aid = 8, channel 8, BW20, bssid = 96:6a:b0:c3:3b:27
I (2409) wifi:security: WPA2-PSK, phy: bgn, rssi: -45
I (2409) wifi:pm start, type: 1
I (2499) wifi:AP's beacon interval = 102400 us, DTIM period = 1
I (3899) esp_netif_handlers: sta ip: 192.168.2.17, mask: 255.255.255.0, gw: 192.168.2.254
I (3899) FCKX_SEQ: got ip:192.168.2.17
I (3899) FCKX_SEQ: connected to ap SSID:Verhoeckx_glas password:Goofy2kmacho_99
W (3909) APP_MAIN: Initialize MQTT connection here
I (3909) FCKX_SEQ: MQTT CLIENT STARTED
I (3909) FCKX_SEQ: Other event id:7
E (3929) InsertEvent: INSERT 1a, GetEndTime() 0 NOT < msg.GetTime() 0
E (3929) InsertEvent: FindEventNumber 1 (must be true)
E (3929) InsertEvent: ev_num 0
E (3949) InsertEvent: INSERT 4
E (3949) InsertEvent: INSERT 4a
E (3949) InsertEvent: INSERT 5
E (3959) InsertEvent: INSERT 8
E (3959) InsertEvent: INSERT 7
E (3959) InsertEvent: INSERT 1a, GetEndTime() 0 NOT < msg.GetTime() 0
E (3969) InsertEvent: FindEventNumber 1 (must be true)
I (3979) FCKX_SEQ: MQTT_EVENT_CONNECTED
I (3979) FCKX_SEQ: sent publish successful, msg_id=42780
I (3979) FCKX_SEQ: sent subscribe successful, msg_id=57965
I (3989) FCKX_SEQ: sent subscribe successful, msg_id=26675
I (3999) FCKX_SEQ: sent unsubscribe successful, msg_id=38127
I (4009) FCKX_SEQ: sent subscribe successful, msg_id=36492
I (4009) FCKX_SEQ: sent subscribe successful, msg_id=29523
I (4019) FCKX_SEQ: sent subscribe successful, msg_id=48200
E (3989) InsertEvent: ev_num 0
I (4029) FCKX_SEQ: MQTT_EVENT_PUBLISHED, msg_id=42780
I (4039) FCKX_SEQ: MQTT_EVENT_SUBSCRIBED, msg_id=57965
I (4039) FCKX_SEQ: sent publish successful, msg_id=0
E (4039) InsertEvent: INSERT 4
E (4049) InsertEvent: INSERT 4a
E (4049) InsertEvent: INSERT 5
I (4049) FCKX_SEQ: MQTT_EVENT_SUBSCRIBED, msg_id=26675
I (4059) FCKX_SEQ: sent publish successful, msg_id=0
I (4069) FCKX_SEQ: MQTT_EVENT_UNSUBSCRIBED, msg_id=38127
I (4069) FCKX_SEQ: MQTT_EVENT_SUBSCRIBED, msg_id=36492
E (4079) InsertEvent: INSERT 4a
E (4079) InsertEvent: INSERT 5
E (4079) InsertEvent: INSERT 8
I (4079) FCKX_SEQ: sent publish successful, msg_id=0
I (4089) FCKX_SEQ: MQTT_EVENT_SUBSCRIBED, msg_id=29523
I (4099) FCKX_SEQ: sent publish successful, msg_id=0
I (4109) FCKX_SEQ: MQTT_EVENT_SUBSCRIBED, msg_id=25214
I (4119) FCKX_SEQ: sent publish successful, msg_id=0
E (4119) InsertEvent: INSERT 7
I (4119) FCKX_SEQ: MQTT_EVENT_SUBSCRIBED, msg_id=48200
I (4129) FCKX_SEQ: sent publish successful, msg_id=0
E (4139) InsertEvent: INSERT 1a, GetEndTime() 0 NOT < msg.GetTime() 0
E (4139) InsertEvent: FindEventNumber 1 (must be true)
E (4149) InsertEvent: ev_num 0
E (4149) InsertEvent: INSERT 4
E (4149) InsertEvent: INSERT 4a
E (4159) InsertEvent: INSERT 5
E (4159) InsertEvent: INSERT 4a
E (4159) InsertEvent: INSERT 5
E (4169) InsertEvent: INSERT 4a
E (4169) InsertEvent: INSERT 5
E (4169) InsertEvent: INSERT 8
E (4179) InsertEvent: INSERT 7
E (4179) InsertEvent: INSERT 1a, GetEndTime() 0 NOT < msg.GetTime() 0
E (4189) InsertEvent: FindEventNumber 1 (must be true)
E (4189) InsertEvent: ev_num 0
E (4189) InsertEvent: INSERT 4
E (4199) InsertEvent: INSERT 4a
E (4199) InsertEvent: INSERT 5
E (4199) InsertEvent: INSERT 8
E (4209) InsertEvent: INSERT 7
E (4209) InsertEvent: INSERT 1a, GetEndTime() 0 NOT < msg.GetTime() 0
E (4219) InsertEvent: FindEventNumber 1 (must be true)
E (4219) InsertEvent: ev_num 0
E (4229) InsertEvent: INSERT 4
E (4229) InsertEvent: INSERT 4a
E (4229) InsertEvent: INSERT 5
E (4249) InsertEvent: INSERT 4a
E (4249) InsertEvent: INSERT 5
E (4249) InsertEvent: INSERT 8
E (4259) InsertEvent: INSERT 7
E (4259) InsertEvent: INSERT 1, GetEndTime() 0 < msg.GetTime() 480
E (4269) InsertEvent: BEFORE insert GetNumEvents() 3
E (4269) InsertEvent: BEFORE insert GetNumEvents() 4
E (4279) InsertEvent: INSERT 1, GetEndTime() 480 < msg.GetTime() 590
E (4279) InsertEvent: BEFORE insert GetNumEvents() 4
E (4289) InsertEvent: BEFORE insert GetNumEvents() 5
E (4289) InsertEvent: INSERT 1, GetEndTime() 590 < msg.GetTime() 600
E (4299) InsertEvent: BEFORE insert GetNumEvents() 5
E (4299) InsertEvent: BEFORE insert GetNumEvents() 6
E (4309) InsertEvent: INSERT 1, GetEndTime() 600 < msg.GetTime() 710
E (4309) InsertEvent: BEFORE insert GetNumEvents() 6
E (4319) InsertEvent: BEFORE insert GetNumEvents() 7
E (4319) InsertEvent: INSERT 1, GetEndTime() 710 < msg.GetTime() 720
E (4329) InsertEvent: BEFORE insert GetNumEvents() 7
E (4349) InsertEvent: BEFORE insert GetNumEvents() 8
E (4349) InsertEvent: INSERT 1, GetEndTime() 720 < msg.GetTime() 830
E (4359) InsertEvent: BEFORE insert GetNumEvents() 8
E (4359) InsertEvent: BEFORE insert GetNumEvents() 9
E (4369) InsertEvent: INSERT 1, GetEndTime() 830 < msg.GetTime() 840
E (4369) InsertEvent: BEFORE insert GetNumEvents() 9
E (4379) InsertEvent: BEFORE insert GetNumEvents() 10
E (4379) InsertEvent: INSERT 1, GetEndTime() 840 < msg.GetTime() 950
E (4389) InsertEvent: BEFORE insert GetNumEvents() 10
E (4389) InsertEvent: BEFORE insert GetNumEvents() 11
E (4399) InsertEvent: INSERT 1, GetEndTime() 950 < msg.GetTime() 960
E (4409) InsertEvent: BEFORE insert GetNumEvents() 11
E (4409) InsertEvent: BEFORE insert GetNumEvents() 12
E (4419) InsertEvent: INSERT 1, GetEndTime() 960 < msg.GetTime() 1070
E (4419) InsertEvent: BEFORE insert GetNumEvents() 12
E (4429) InsertEvent: BEFORE insert GetNumEvents() 13
E (4429) InsertEvent: INSERT 1, GetEndTime() 1070 < msg.GetTime() 1080
E (4449) InsertEvent: BEFORE insert GetNumEvents() 13
E (4449) InsertEvent: BEFORE insert GetNumEvents() 14
E (4459) InsertEvent: INSERT 1, GetEndTime() 1080 < msg.GetTime() 1190
E (4469) InsertEvent: BEFORE insert GetNumEvents() 14
E (4469) InsertEvent: BEFORE insert GetNumEvents() 15
E (4479) InsertEvent: INSERT 1, GetEndTime() 1190 < msg.GetTime() 1200
E (4479) InsertEvent: BEFORE insert GetNumEvents() 15
E (4489) InsertEvent: BEFORE insert GetNumEvents() 16
E (4489) InsertEvent: INSERT 1, GetEndTime() 1200 < msg.GetTime() 1430
E (4499) InsertEvent: BEFORE insert GetNumEvents() 16
E (4499) InsertEvent: BEFORE insert GetNumEvents() 17
E (4509) InsertEvent: INSERT 1, GetEndTime() 1430 < msg.GetTime() 1440
E (4519) InsertEvent: BEFORE insert GetNumEvents() 17
E (4519) InsertEvent: BEFORE insert GetNumEvents() 18
E (4529) InsertEvent: INSERT 1, GetEndTime() 1440 < msg.GetTime() 1550
E (4529) InsertEvent: BEFORE insert GetNumEvents() 18
E (4549) InsertEvent: BEFORE insert GetNumEvents() 19
E (4549) InsertEvent: INSERT 1, GetEndTime() 1550 < msg.GetTime() 1560
E (4559) InsertEvent: BEFORE insert GetNumEvents() 19
E (4559) InsertEvent: BEFORE insert GetNumEvents() 20
E (4569) InsertEvent: INSERT 1, GetEndTime() 1560 < msg.GetTime() 1670
E (4579) InsertEvent: BEFORE insert GetNumEvents() 20
E (4579) InsertEvent: BEFORE insert GetNumEvents() 21
E (4589) InsertEvent: INSERT 1, GetEndTime() 1670 < msg.GetTime() 1680
E (4589) InsertEvent: BEFORE insert GetNumEvents() 21
E (4599) InsertEvent: BEFORE insert GetNumEvents() 22
E (4599) InsertEvent: INSERT 1, GetEndTime() 1680 < msg.GetTime() 1790
E (4609) InsertEvent: BEFORE insert GetNumEvents() 22
E (4609) InsertEvent: BEFORE insert GetNumEvents() 23
E (4619) InsertEvent: INSERT 1, GetEndTime() 1790 < msg.GetTime() 1800
E (4629) InsertEvent: BEFORE insert GetNumEvents() 23
E (4629) InsertEvent: BEFORE insert GetNumEvents() 24
E (4649) InsertEvent: INSERT 1, GetEndTime() 1800 < msg.GetTime() 1910
E (4649) InsertEvent: BEFORE insert GetNumEvents() 24
E (4659) InsertEvent: BEFORE insert GetNumEvents() 25
E (4659) InsertEvent: INSERT 1, GetEndTime() 1910 < msg.GetTime() 1920
E (4669) InsertEvent: BEFORE insert GetNumEvents() 25
E (4669) InsertEvent: BEFORE insert GetNumEvents() 26
E (4679) InsertEvent: INSERT 1, GetEndTime() 1920 < msg.GetTime() 2030
E (4689) InsertEvent: BEFORE insert GetNumEvents() 26
E (4689) InsertEvent: BEFORE insert GetNumEvents() 27
E (4699) InsertEvent: INSERT 1, GetEndTime() 2030 < msg.GetTime() 2040
E (4699) InsertEvent: BEFORE insert GetNumEvents() 27
E (4709) InsertEvent: BEFORE insert GetNumEvents() 28
E (4709) InsertEvent: INSERT 1, GetEndTime() 2040 < msg.GetTime() 2150
E (4719) InsertEvent: BEFORE insert GetNumEvents() 28
E (4719) InsertEvent: BEFORE insert GetNumEvents() 29
E (4729) InsertEvent: INSERT 1, GetEndTime() 2150 < msg.GetTime() 2160
E (4749) InsertEvent: BEFORE insert GetNumEvents() 29
E (4749) InsertEvent: BEFORE insert GetNumEvents() 30
E (4759) InsertEvent: INSERT 1, GetEndTime() 2160 < msg.GetTime() 2370
E (4759) InsertEvent: BEFORE insert GetNumEvents() 30
E (4769) InsertEvent: BEFORE insert GetNumEvents() 31
E (4769) SEQUENCER: track_states.size() 17
E (4789) SEQUENCER: track_states.size() 17
E (4789) SEQUENCER: track_states.size() 17
E (4789) SEQUENCER: track_states.size() 17
E (4789) SEQUENCER: track_states.size() 17
E (4789) SEQUENCER: track_states.size() 17
E (4799) SEQUENCER: track_states.size() 17
E (4809) SEQUENCER: track_states.size() 17
Playing track 1 ...
                Entered in AdvancedSequencer::Start() ...
E (4819) NICMIDI DRIVER: MIDIOutDriver::OpenPort()
W (4819) NIMBLEDRIVER: Initialize nimBLEOutdriver MidiOutNimBLE :: openPort
I (4829) NimBLEDevice.cpp: NimBLEDevice::init entered
I (4839) NimBLEDevice.cpp: NimBLEDevice::init !initialized
I (4839) NimBLEDevice.cpp: Controller status A: 0
I (4849) NimBLEDevice.cpp: Controller status B: 0
I (4849) NimBLEDevice.cpp: Controller status C: 0
I (4849) NimBLEDevice.cpp: NimBLEDevice::init B
I (4859) NimBLEDevice.cpp: NimBLEDevice::init C
I (4859) NimBLEDevice.cpp: Controller status D: 0
I (4869) BTDM_INIT: BT controller compile version [3723d5b]
I (4879) NimBLEDevice.cpp: Controller status E: 1
I (4879) NimBLEDevice.cpp: NimBLEDevice::init E
I (5129) NimBLEDevice.cpp: Controller status F: 2
I (5129) NimBLEDevice.cpp: Controller status G: 2
I (5129) NimBLEDevice.cpp: Controller status H: 2
I (5139) NimBLEDevice.cpp: NimBLEDevice::init I
I (5139) NimBLEDevice.cpp: NimBLEDevice::init J
I (5159) NimBLEDevice: BLE Host Task Started
I (5159) NimBLEDevice.cpp: NimBLEDevice::init Wait for host and controller to sync
I (5189) NimBLEDevice: NimBle host synced.
I (5189) NimBLEDevice.cpp: NimBLEDevice::init going to exit
W (5189) NIMBLEDRIVER: NimBLEDevice created
W (5189) NIMBLEDRIVER: BLE server created
W (5199) NIMBLEDRIVER: BLE server callbacks created
W (5199) NIMBLEDRIVER: BLE server service created
W (5219) NIMBLEDRIVER: BLE server characteristic created
W (5219) NIMBLEDRIVER: BLE service started
OPENPORT ENTEREDW (5229) NIMBLEDRIVER: MidiOutNimBLE :: openPort entered
W (5229) NIMBLEDRIVER: xTaskCreate(connectedTask) IS THIS REQUIRED?
I (5239) NIMBLEDRIVER: Prepare advertising
I (5239) NIMBLEDRIVER: Start advertising
GAP procedure initiated: advertise; disc_mode=2 adv_channel_map=0 own_addr_type=0 adv_filter_policy=0 adv_itvl_min=0 adv_itvl_max=0
I (5259) NIMBLEDRIVER: OPENPORT Waiting for a client connection to notify...
E (5269) NIMBLEDRIVER: MidiOutNimBLE::openPort: a valid connection already exists!
OUT Port fckx_seq open
Timer open with 10 msecs resolution
                 ... Exiting from AdvancedSequencer::Start()
E (5289) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (5289) NICMIDI DRIVER: MIDIOutDriver::OutputMessageW (6939) NIMBLE_ONCONNECT: -----
GAP procedure initiated: advertise; disc_mode=2 adv_channel_map=0 own_addr_type=0 adv_filter_policy=0 adv_itvl_min=0 adv_itvl_max=0
W (6949) NIMBLEDRIVER: BLE connected, do required stuff, depending on the needs for this connection
I (6979) NimBLEServer: mtu update event; conn_handle=0 mtu=256
E (7689) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
I (7929) NimBLEServer: subscribe event; attr_handle=12, subscribed: true
I (7929) NimBLECharacteristic: New subscribe value for conn: 0 val: 1
E (8239) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (8289) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (8839) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (8889) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (9439) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (9489) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (10039) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (10089) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (10639) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (10689) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (11239) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (11289) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (12439) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (12489) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (13039) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (13089) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (13639) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (13689) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (14239) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (14289) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (14839) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (14889) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (15439) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (15489) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (16039) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (16089) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
E (17139) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
GATT procedure initiated: notify; att_handle=12
Auto stopping the sequencer: StaticStopProc called
MIDISequencer::TickProc called after Auto Stop          Entered in AdvancedSequencer::Stop() ...
Timer stopped by MIDITimer::Stop()
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
    Stop
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
E (17199) SEQUENCER: track_states.size() 17
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
GATT procedure initiated: notify; att_handle=12
OUT Port fckx_seq closed
E (17249) SEQUENCER: track_states.size() 17
                 ... Exiting from AdvancedSequencer::Stop()
Playing 3 tracks ...
                Entered in AdvancedSequencer::Start() ...
E (17279) NICMIDI DRIVER: MIDIOutDriver::OpenPort()
W (17279) NIMBLEDRIVER: Initialize nimBLEOutdriver MidiOutNimBLE :: openPort
I (17279) NimBLEDevice.cpp: NimBLEDevice::init entered
I (17289) NimBLEDevice.cpp: NimBLEDevice::init Wait for host and controller to sync
I (17289) NimBLEDevice.cpp: NimBLEDevice::init going to exit
W (17299) NIMBLEDRIVER: NimBLEDevice created
W (17299) NIMBLEDRIVER: BLE server created
W (17319) NIMBLEDRIVER: BLE server callbacks created
W (17319) NimBLEServer: Warning creating a duplicate service UUID: 4fafc201-1fb5-459e-8fcc-c5c9c331914b
W (17329) NIMBLEDRIVER: BLE server service created
W (17339) NIMBLEDRIVER: BLE server characteristic created
E (17339) NimBLEService: ble_gatts_add_svcs, rc= 15,
W (17349) NIMBLEDRIVER: BLE service started
OPENPORT ENTEREDW (17349) NIMBLEDRIVER: MidiOutNimBLE :: openPort entered
W (17359) NIMBLEDRIVER: xTaskCreate(connectedTask) IS THIS REQUIRED?
I (17359) NIMBLEDRIVER: Prepare advertising
I (17369) NIMBLEDRIVER: Start advertising
W (17369) NimBLEAdvertising: Advertising already active
I (17379) NIMBLEDRIVER: OPENPORT Waiting for a client connection to notify...
OUT Port fckx_seq open
Catch events before started ...
OUT Port fckx_seq open (2 times)
E (17399) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17399) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17409) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17409) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17419) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17419) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17429) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17429) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17439) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17439) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17459) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17459) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17469) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17469) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17479) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17479) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17489) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17489) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17499) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17499) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17509) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17509) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17519) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17519) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17529) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17529) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17539) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17539) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17559) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17559) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17569) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17569) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17579) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17589) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17589) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17599) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17599) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17609) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17609) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17619) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17619) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17629) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17629) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17639) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17639) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17659) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17659) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17669) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17669) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17679) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17679) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17689) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17689) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17699) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17699) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17709) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17709) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17719) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17719) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17729) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17729) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17739) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17749) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17759) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17759) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17769) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17779) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17779) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17789) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17789) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17799) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17799) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17809) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17809) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17819) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17819) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17829) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17829) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17839) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17839) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17859) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17859) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17869) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17869) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17879) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17879) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17889) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17889) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17899) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17899) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17909) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17909) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17919) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17919) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17929) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17929) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17939) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17959) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17959) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17969) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17969) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17979) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17979) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17989) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17989) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17999) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (17999) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18009) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18009) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18019) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18019) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18029) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18029) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18039) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18039) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18059) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18059) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18069) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18069) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18079) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18079) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18089) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18089) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18099) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18099) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18109) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
OUT Port fckx_seq closed (open 1 times)
CatchEventsBefore finished: events sent: 126
Timer open with 10 msecs resolution
                 ... Exiting from AdvancedSequencer::Start()
E (18139) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18689) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (18739) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (19289) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (19339) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
E (20389) NICMIDI DRIVER: MIDIOutDriver::OutputMessage
Auto stopping the sequencer: StaticStopProc called
                Entered in AdvancedSequencer::Stop() ...
Timer stopped by MIDITimer::Stop()
OUT Port fckx_seq closed
E (20399) SEQUENCER: track_states.size() 17
                 ... Exiting from AdvancedSequencer::Stop()
    Stop
W (20439) APP_MAIN: END OF TEST_MAIN
W (20939) APP_MAIN: END OF TEST_MAIN
W (21439) APP_MAIN: END OF TEST_MAIN
W (21939) APP_MAIN: END OF TEST_MAIN
W (22439) APP_MAIN: END OF TEST_MAIN
W (22939) APP_MAIN: END OF TEST_MAIN
W (23439) APP_MAIN: END OF TEST_MAIN
W (23939) APP_MAIN: END OF TEST_MAIN